%% This is a Diagram example for Task 0
%% High-level Class Diagram showing layered architecture and Facade pattern usage

%% Diagram type
classDiagram

%% Presentation Layer: Handles incoming requests, exposes a simplified interface (the "facade") for clients
class PresentationLayer {
    <<Interface>>
    +ServiceAPI
    +handleRequest ()
}
%% Business Logic Layer: Core of the application logic; coordinates models and rules
class BusinessLogicLayer {
    +User
    +Place
    +Review
    +Amenity
    +processRequest()
}
%% Persistence Layer: Responsible for interacting with the data store (e.g. database, files)
class PersistenceLayer {
    +DatabaseAccess
    +executeQuery()
}

%% Relationships
%% Facade Pattern: PresentationLayer acts as a facade that hides complexity of BusinessLogicLayer
PresentationLayer --> BusinessLogicLayer : Facade Pattern

%% BusinessLogicLayer delegates data tasks to PersistenceLayer
BusinessLogicLayer --> PersistenceLayer : Database Operations
